{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","class","id","type","value","onChange","target","placeholder","aria-label","aria-describedby","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAkB7C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SAEI,sBAAKO,MAAM,mBAAX,UACA,qBAAKA,MAAM,sBAAX,SACI,sBAAMA,MAAM,2BAA2BC,GAAG,eAA1C,SACI,mBAAGD,MAAM,sBAGjB,uBACIE,KAAK,OACLC,MAAOX,EACPY,SA1Bc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,QA0BfH,MAAM,uBACNM,YAAY,oCACZC,aAAW,WACXC,mBAAiB,uB,+BCpCpBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAWH,GAFlD,+DAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHnB,GAAImB,EAAInB,GACRoB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAV3B,kBAcRM,GAdQ,4CAAH,sDCCPM,EAAc,SAAC,GAAqB,EAApBvB,GAAqB,IAAjBoB,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEpC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKA,UAAU,gBAAgBC,IAAKd,EAAKe,IAAKN,IAC9C,4BAAIA,QCHHO,EAAU,SAAC,GAAiB,IAAhBlB,EAAe,EAAfA,UAAe,ECAZ,SAACA,GAAe,IAAD,EAEbnB,mBAAS,CAC/B0B,KAAM,GACNY,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAsBvC,OAfAC,qBAAW,WAEPC,YAAY,WAERxB,EAAQC,GACPwB,MAAK,SAAAC,GACFJ,EAAS,CACLd,KAAMkB,EACNN,SAAQ,SAItB,OACC,CAACnB,IAEGoB,EDpBiBM,CAAa1B,GAA9BO,EAF6B,EAE7BA,KAAMY,EAFuB,EAEvBA,QAEb,OACI,qCACI,6BAAKnB,IAEJmB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SAGQR,EAAKE,KAAI,SAAAG,GAAM,OAEX,cAAC,EAAD,eAEQA,GADCA,EAAOrB,aEhB3BoC,EAAe,WAAM,MAGM9C,mBAAS,CAAC,WAHhB,mBAGvB+C,EAHuB,KAGXhD,EAHW,KAK9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BAEQgD,EAAWnB,KAAI,SAACmB,GAAD,OACf,cAAC,EAAD,CAEI5B,UAAW4B,GADNA,Y,MCd7BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0e341236.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategoria = ({setCategorias}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputCgange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length > 2) { // validacion para vaciar el input\r\n            setCategorias(cats => [inputValue, ...cats])\r\n            setinputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text bg-dark\" id=\"basic-addon1\">\r\n                    <i class=\"fas fa-search\"></i>\r\n                </span>\r\n            </div>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputCgange}\r\n                class=\"form-control bg-dark\" \r\n                placeholder=\"Escribe el nombre del gif aqui...\" \r\n                aria-label=\"Username\" \r\n                aria-describedby=\"basic-addon1\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async(categoria) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (categoria)}&limit=10&api_key=gWQEQWW7GFJBQ1LZhPuasRBv0SLQkpGa`\r\n        const resp = await fetch( url )\r\n        const {data} = await resp.json()\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        } )\r\n\r\n        return gifs\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img className=\"img-thumbnail\" src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    \r\n    const {data, loading} = useFetchGifs(categoria)\r\n    \r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                    {\r\n                    data.map(images => (\r\n\r\n                        <GifGridItem \r\n                            key={images.id}\r\n                            {...images} \r\n                        />\r\n\r\n                    ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    }) \r\n\r\n    useEffect( () => {\r\n\r\n        setTimeout( () => {\r\n\r\n            getGifs(categoria)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n\r\n    },1000)\r\n    }, [categoria])\r\n\r\n    return state // el state es el data y el loading antes definido\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategoria } from './components/AddCategoria'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['One Puch', 'Samurai X', 'Dragon ball'];\r\n    const [categorias, setCategorias] = useState(['naruto'])\r\n\r\n    return (\r\n        <>\r\n            <h2>Busca tu Gif</h2>\r\n            <AddCategoria setCategorias={setCategorias}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map((categorias) =>  (\r\n                    <GifGrid \r\n                        key={categorias}\r\n                        categoria={categorias} \r\n                    />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n// crear gidExpertApp\n\n\n"],"sourceRoot":""}